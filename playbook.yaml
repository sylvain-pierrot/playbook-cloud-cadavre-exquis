- name: Deploy Cluster K3s with 1 Master and 2 Nodes Worker
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    - PATH: /home/pierrots/Atos/ansible/playbook-cloud-cadavre-exquis
    - IP_MASTER: "192.168.50.10"

  tasks:
    ## Checks install
    # # vagrant
    # - name: Check if Vagrant is installed
    #   command: vagrant --version
    #   register: vagrant_check
    #   ignore_errors: true

    # - name: Install Vagrant
    #   become: true
    #   apt:
    #     name: vagrant
    #   when: vagrant_check.rc != 0

    # # kubectl
    # - name: Check if kubectl is installed
    #   command: kubectl version --client
    #   register: kubectl_check
    #   ignore_errors: true

    # - name: Install kubectl
    #   become: true
    #   shell: |
    #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    #     sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    #   when: kubectl_check.rc != 0

    # # kubectx
    # - name: Check if kubectx is installed
    #   command: kubectx -h
    #   register: kubectx_check
    #   ignore_errors: true

    # - name: Install kubectx
    #   become: true
    #   apt:
    #     name: kubectx
    #   when: kubectx_check.rc != 0

    # # helm
    # - name: Check if Helm is installed
    #   command: helm version --client
    #   register: helm_check
    #   ignore_errors: true

    # - name: Install Helm
    #   become: true
    #   shell: |
    #     curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #     sudo apt-get install apt-transport-https --yes
    #     echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #     sudo apt-get update
    #     sudo apt-get install helm
    #   when: helm_check.rc != 0

    # # git
    # - name: Check if git is installed
    #   command: git --version
    #   register: git_check
    #   ignore_errors: true

    # - name: Install git
    #   become: true
    #   apt:
    #     name: git
    #   when: git_check.rc != 0

    ## Main tasks
    - name: Provision 3 VMs
      command: |
        vagrant up
      args:
        chdir: "{{ PATH }}"

    - name: Install K3s Control Plane on first VM
      shell: |
        vagrant ssh node-1-master -c "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"--flannel-backend=none --disable-network-policy --cluster-cidr=192.168.0.0/16\" sh -"
      args:
        chdir: "{{ PATH }}"

    - name: Retrieve Cluster context and node-token
      shell: |
        vagrant ssh node-1-master -c "sudo cat /var/lib/rancher/k3s/server/node-token" > /tmp/tempnodetoken
        vagrant ssh node-1-master -c "sudo cat /etc/rancher/k3s/k3s.yaml" > /tmp/tempconfig
        sed -i 's/default/cce/g' /tmp/tempconfig
        sed -i 's/127.0.0.1/192.168.50.10/g' /tmp/tempconfig
        KUBECONFIG=~/.kube/config:/tmp/tempconfig kubectl config view --flatten > ~/.kube/config
      args:
        chdir: "{{ PATH }}"
  
    - name: Install k3s Worker on others VMs
      shell: |
        vagrant ssh node-2-worker -c "curl -sfL https://get.k3s.io | K3S_URL=https://{{ IP_MASTER }}:6443 K3S_TOKEN=$(cat /tmp/tempnodetoken) sh -"
        vagrant ssh node-3-worker -c "curl -sfL https://get.k3s.io | K3S_URL=https://{{ IP_MASTER }}:6443 K3S_TOKEN=$(cat /tmp/tempnodetoken) sh -"
      args:
        chdir: "{{ PATH }}"

    - name: Switch to the new context
      shell: |
        rm /tmp/tempconfig
        rm /tmp/tempnodetoken
        kubectx cce

    - name: Install Calico
      shell: |
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml

    - name: Wait for cluster nodes to be ready
      command: |
        kubectl wait --for=condition=Ready node --all
      retries: 20
      delay: 10
      register: nodes_status
      until: nodes_status.rc == 0
      ignore_errors: true

    - name: Wait for pods running --namespace=kube-system
      command: |
        kubectl wait --for=condition=Ready --namespace=kube-system --namespace pod --all
      retries: 20
      delay: 10
      register: pods_status
      until: pods_status.rc == 0
      ignore_errors: true

    - name: Taint node Master NoSchedule
      shell: |
        kubectl taint node node-1-master k3s-controlplane=true:NoSchedule
    #     kubectl edit deployments local-path-provisioner -n kube-system
    #     kubectl edit deployments local-path-provisioner -n calico-system
    #     kubectl edit deployments local-path-provisioner -n calico-apiserver

    - name: Install cloud-cadavre-exquis
      shell: |
        git clone https://github.com/fteychene/cloud-cadavre-exquis.git
        cd cloud-cadavre-exquis
        helm install cloud-cadavre-exquis helm/ -f helm/values.yaml --namespace cce --create-namespace
      args:
        chdir: "{{ PATH }}"

    - name: Install ingress traefik
      shell: |
        kubectl apply -f ingress.yaml