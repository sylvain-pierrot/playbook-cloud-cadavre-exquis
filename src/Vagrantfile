Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  config.env.enable # Enable vagrant-env(.env)

  # VM Master
  config.vm.define "k8s-master", primary: true do |master|
    master.vm.provider :libvirt do |libvirt|
      libvirt.cpus = 2
      libvirt.memory = 2048
      # libvirt.machine_virtual_size = 20
    end
    master.vm.box = ENV['BOX_IMAGE']
    master.vm.network :private_network, ip: "192.168.50.10", netmask: "255.255.255.0"
    master.vm.hostname = "k8s-master"
    master.vm.provision "ansible" do |ansible|
      ansible.verbose = "v"
      ansible.playbook = "kubernetes-setup/master-playbook.yml"
      ansible.extra_vars = {
          node_ip: "192.168.50.10",
      }
    end
  end

  # VMs Worker
  (1..ENV['NODE_COUNT'].to_i).each do |i|
    config.vm.define "node-#{i}" do |node|
      node.vm.provider :libvirt do |libvirt|
        libvirt.cpus = 2
        libvirt.memory = 2048
        # libvirt.machine_virtual_size = 20
      end
      node.vm.box = ENV['BOX_IMAGE']
      node.vm.network :private_network, ip: "192.168.50.#{i + 10}", netmask: "255.255.255.0"
      node.vm.hostname = "node-#{i}"
      node.vm.provision "ansible" do |ansible|
        ansible.verbose = "v"
        ansible.playbook = "kubernetes-setup/node-playbook.yml"
        ansible.extra_vars = {
            node_ip: "192.168.50.10",
        }
      end
    end
  end
end
