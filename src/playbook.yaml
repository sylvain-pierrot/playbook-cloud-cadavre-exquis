- name: Deploy "cloud-cadavre-exquis"
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    IP_MASTER: "192.168.50.10"
    NAME: "cce"
  tasks:
    ## Checks install
    # # vagrant
    # - name: Check if Vagrant is installed
    #   command: vagrant --version
    #   register: vagrant_check
    #   ignore_errors: true

    # - name: Install Vagrant
    #   become: true
    #   apt:
    #     name: vagrant
    # vagrant plugin install vagrant-env
    #   when: vagrant_check.rc != 0

    # # kubectl
    # - name: Check if kubectl is installed
    #   command: kubectl version --client
    #   register: kubectl_check
    #   ignore_errors: true

    # - name: Install kubectl
    #   become: true
    #   shell: |
    #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    #     sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    #   when: kubectl_check.rc != 0

    # # kubectx
    # - name: Check if kubectx is installed
    #   command: kubectx -h
    #   register: kubectx_check
    #   ignore_errors: true

    # - name: Install kubectx
    #   become: true
    #   apt:
    #     name: kubectx
    #   when: kubectx_check.rc != 0

    # # helm
    # - name: Check if Helm is installed
    #   command: helm version --client
    #   register: helm_check
    #   ignore_errors: true

    # - name: Install Helm
    #   become: true
    #   shell: |
    #     curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #     sudo apt-get install apt-transport-https --yes
    #     echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #     sudo apt-get update
    #     sudo apt-get install helm
    #   when: helm_check.rc != 0

    # # git
    # - name: Check if git is installed
    #   command: git --version
    #   register: git_check
    #   ignore_errors: true

    # - name: Install git
    #   become: true
    #   apt:
    #     name: git
    #   when: git_check.rc != 0

    ## Main tasks
    - name: Provision kubernetes cluster
      shell: |
        VAGRANT_NO_PARALLEL=yes vagrant up
      args:
        chdir: '{{ playbook_dir }}'

    - name: Switch to the new context
      shell: |
        kubectx {{ NAME }}

    - name: Install Calico
      shell: |
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/tigera-operator.yaml
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/custom-resources.yaml

    - name: Wait for cluster nodes to be ready
      command: |
        kubectl wait --for=condition=Ready node --all
      retries: 20
      delay: 30
      register: nodes_status
      until: nodes_status.rc == 0
      ignore_errors: true

    - name: Wait for pods status "Running" or "Succeeded"
      script:
        cmd: checkPodsRunningOrSucceeded.sh
      retries: 50
      delay: 30
      register: pods_status
      until: pods_status.rc == 0
      ignore_errors: true

    # - name: Taint node Master NoSchedule
    #   shell: |
    #     kubectl taint node node-1-master k3s-controlplane=true:NoSchedule
    #     kubectl edit deployments local-playbook_dir-provisioner -n kube-system
    #     kubectl edit deployments local-playbook_dir-provisioner -n calico-system
    #     kubectl edit deployments local-playbook_dir-provisioner -n calico-apiserver

    - name: Checking if cloud-cadavre-exquis exists
      stat:
        path: "{{ playbook_dir }}/cloud-cadavre-exquis"
      register: folder

    - name: Git clone cloud-cadavre-exquis if it doesn't already exists
      shell: |
        git clone https://github.com/fteychene/cloud-cadavre-exquis.git
      when: not folder.stat.exists
      args:
        chdir: '{{ playbook_dir }}'

    - name: Install cloud-cadavre-exquis
      shell: |
        cd cloud-cadavre-exquis
        helm install cloud-cadavre-exquis helm/ -f helm/values.yaml --namespace cce --create-namespace --set dispatcher.domain=192.168.50.10
      args:
        chdir: '{{ playbook_dir }}'

    # - name: Install Prometheus & Grafana
    #   shell: |
    #     helm repo add prom-repo https://prometheus-community.github.io/helm-charts
    #     helm repo update
    #     helm install monitoring prom-repo/kube-prometheus-stack